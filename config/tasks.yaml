# config/tasks.yaml (Updated for Yelp, Geoapify, Transitland, Wiki, Weather tools)

find_transportation:
  description: >
    Research available public transportation routes (bus, train, subway, tram) near the
    starting point {starting_point} and destination {destination} relevant for travel
    between {start_date} and {end_date}. Use the public transport search tool.
    Focus on identifying route names/numbers and operating agencies based on available data (e.g., Transitland).
    Note: This task does NOT search for flights, car rentals, or provide real-time schedules/booking.
  expected_output: >
    A summary of potential public transport routes found near the origin and destination.
    Include route names/numbers (e.g., "Bus 5", "Red Line"), vehicle types (bus, train, etc.),
    and the names of the operating agencies, if available in the data. Mention coverage limitations if no routes are found.
  # Agent assigned in crew.py: transport_planner

find_accommodation:
  description: >
    Search for potential accommodation locations (hotels, hostels, guesthouses)
    in {destination} suitable for the period {start_date} to {end_date}.
    Use the Point of Interest search tool (Geoapify) with relevant categories (e.g., 'accommodation.hotel').
    Focus on identifying names and locations.
    Note: This task does NOT provide real-time pricing, availability, or booking links.
  expected_output: >
    A list presenting 3-5 potential accommodation locations found via POI search.
    For each, include the Name, Address, general location/neighbourhood, and main category type (e.g., Hotel, Hostel)
    if available in the POI data. Explicitly state that prices and availability were not searched.
  # Agent assigned in crew.py: accommodation_finder

get_local_recommendations:
  description: >
    Research and identify top recommendations for tourists visiting {destination} between
    {start_date} and {end_date}. Use Yelp tools for dining/drinking spots. Use the POI search tool (Geoapify)
    for activities, attractions (category 'tourism.attraction'), and museums (category 'entertainment.museum').
    Use Wikipedia tools for a brief historical overview and fun facts.
  expected_output: >
    Four distinct sections:
    1. Brief History & Fun Facts: A concise summary (1-2 paragraphs) of {destination}'s history and interesting facts (from Wikipedia).
    2. Top 3-5 Activities/Attractions: List from Geoapify POI search (category 'tourism.attraction', etc.) with Name, Address/Location.
    3. Top 3 Museums: List from Geoapify POI search (category 'entertainment.museum') with Name, Address/Location.
    4. Top 3-5 Dining/Drinking spots: List from Yelp search with Name, Cuisine/Type, Price Range [$,$$,$$$], Address/Location, Rating.
  # Agent assigned in crew.py: local_guide

get_weather_and_packing_advice:
  description: >
    Provide a summarized weather forecast for {destination} between {start_date} and {end_date}
    (including daily temperature ranges, precipitation chance). Based on this forecast, recommend
    appropriate clothing types and essential items (e.g., umbrella, sunscreen) to pack.
  expected_output: >
    A concise weather summary section covering the trip duration (e.g., "Expect daily highs around X°C, lows around Y°C, with a medium chance of rain mid-week.").
    Followed by a bulleted list of recommended packing items (e.g., "- Layers (T-shirts, sweaters) - Waterproof jacket - Comfortable walking shoes").
  # Agent assigned in crew.py: packing_and_weather_advisor (No change needed)

compile_travel_report:
  description: >
    Compile all gathered information from previous tasks (public transport options, potential accommodation locations,
    weather/packing, local recommendations) into a single, comprehensive travel report document
    for the trip to {destination} from {start_date} to {end_date}. Organize the information logically and ensure clarity,
    noting any limitations (e.g., lack of real-time pricing for accommodation).
  expected_output: >
    A well-structured markdown document containing all the synthesized information
    from the previous research tasks. The structure should follow standard travel itinerary sections
    (e.g., Transportation (Public Transit), Accommodation (Locations), Local Guide, Weather/Packing).
    Acknowledge where information like real-time pricing or booking details were not available due to tool limitations.
  agent_assigned: report_compiler # Assigned in crew.py
  # Context provided in crew.py from outputs of other tasks.
